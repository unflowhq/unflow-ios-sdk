// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5 (swiftlang-1300.0.31.1 clang-1300.0.29.1)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name UnflowUI
import Combine
import Foundation
import Nuke
import SafariServices
import Swift
import SwiftUI
import UIKit
import Unflow
@_exported import UnflowUI
import _Concurrency
@_hasMissingDesignatedInitializers public class UnflowSDK {
  public var isInitialized: Swift.Bool
  public func setUserId(userId: Swift.String)
  public func setAttributes(attributes: [Swift.String : Swift.String])
  @available(iOS 13.0, *)
  public func setCustomFonts(fonts: UnflowUI.Fonts)
  @available(iOS 13.0, *)
  public func sync()
  @objc deinit
}
extension UnflowUI.UnflowSDK {
  public struct Config {
    public init(apiKey: Swift.String, enableLogging: Swift.Bool)
  }
  public static let client: UnflowUI.UnflowSDK
  public static func initialize(config: UnflowUI.UnflowSDK.Config, analyticsListener: Unflow.AnalyticsListener? = nil) -> UnflowUI.UnflowSDK
}
@available(iOS 13.0, *)
@_Concurrency.MainActor(unsafe) public struct RemoteImage : SwiftUI.View {
  @_Concurrency.MainActor(unsafe) public init(uri: Swift.String, contentMode: SwiftUI.ContentMode = .fill)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s8UnflowUI11RemoteImageV4bodyQrvp", 0) __
}
@available(iOS 13.0, *)
public struct ImageBlock : SwiftUI.View {
  public init(block: Unflow.Block.Image)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s8UnflowUI10ImageBlockV4bodyQrvp", 0) __
}
@available(iOS 13.0, *)
@_Concurrency.MainActor(unsafe) public struct TextBlock : SwiftUI.View {
  @_Concurrency.MainActor(unsafe) public init(block: Unflow.Block.Text)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s8UnflowUI9TextBlockV4bodyQrvp", 0) __
}
@available(iOS 13.0, *)
public struct OpenerRail : SwiftUI.View {
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s8UnflowUI10OpenerRailV4bodyQrvp", 0) __
}
@available(iOS 13.0, *)
public struct BlockView : SwiftUI.View {
  public init(block: Unflow.Block)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s8UnflowUI9BlockViewV4bodyQrvp", 0) __
}
@available(iOS 13.0, *)
@_Concurrency.MainActor(unsafe) public struct OpenerView : SwiftUI.View {
  @_Concurrency.MainActor(unsafe) public init(subscriptionId: Swift.String = UnflowSdk.shared.SUBSCRIPTION_ID_DEFAULT)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s8UnflowUI10OpenerViewV4bodyQrvp", 0) __
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) open class OpenerViewController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@available(iOS 13.0, *)
public struct AuthorBlock : SwiftUI.View {
  public init(block: Unflow.Block.Author)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s8UnflowUI11AuthorBlockV4bodyQrvp", 0) __
}
@available(iOS 13.0, *)
public struct Paginator : SwiftUI.View {
  public init(numDots: Swift.Int, activeIndex: Swift.Int, pageTheme: Unflow.Theme)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s8UnflowUI9PaginatorV4bodyQrvp", 0) __
}
@available(iOS 13.0, *)
public struct OpenerBanner : SwiftUI.View {
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s8UnflowUI12OpenerBannerV4bodyQrvp", 0) __
}
@available(iOS 13.0, *)
public struct Typography {
}
@available(iOS 13.0, *)
public struct Fonts {
  public var title: SwiftUI.Font?
  public var body: SwiftUI.Font?
  public var button: SwiftUI.Font?
  public var openerTitle: SwiftUI.Font?
  public var openerSubtitle: SwiftUI.Font?
  public init(title: SwiftUI.Font? = nil, body: SwiftUI.Font? = nil, button: SwiftUI.Font? = nil, openerTitle: SwiftUI.Font? = nil, openerSubtitle: SwiftUI.Font? = nil)
}
